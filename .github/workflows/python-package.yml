# This workflow will install Python dependencies, lint, and run tests with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test and Lint

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
        uv-arg: ["--resolution=lowest", ""]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv pip install ${{ matrix.uv-arg }} --system -r requirements.txt
        uv pip install ${{ matrix.uv-arg }} --system -r torch_requirements.txt -f https://download.pytorch.org/whl/cpu
        uv pip install ${{ matrix.uv-arg }} --system -r torch_extra_requirements.txt --index-url https://data.pyg.org/whl/torch-2.4.0+cpu.html
    - name: Analyzing the code with pylint
      if: ${{ matrix.os != 'windows-latest' }} # Windows throws strange linting errors
      run: |
        pylint $(git ls-files '*.py')
    - name: Analyzing the code with flake8
      uses: py-actions/flake8@v2
      with:
        max-line-length: "88"
        args: "--docstring-convention=numpy --extend-ignore=E203,D105"
        plugins: "flake8-bugbear==24.4.26 flake8-docstrings"
    - name: Test with pytest
      run: |
        pytest
